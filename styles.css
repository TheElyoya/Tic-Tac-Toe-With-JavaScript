* {
  box-sizing: border-box;
  margin: 0;
}
body {
  background-color: #12171b;
}
:root {
  --cell-cize: 100px;
  --mark-size: calc(var(--cell-cize) * 0.9);
}
.board {
  width: 100vw;
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(3, auto);
  justify-content: center;
  align-content: center;
}
.board .cell {
  background-color: #12171b;
  width: var(--cell-cize);
  height: var(--cell-cize);
  border: solid 1px white;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.board .cell:first-child,
.board .cell:nth-child(2),
.board .cell:nth-child(3) {
  border-top: none;
}
.board .cell:last-child,
.board .cell:nth-child(8),
.board .cell:nth-child(7) {
  border-bottom: none;
}
.board .cell:nth-child(1),
.board .cell:nth-child(4),
.board .cell:nth-child(7) {
  border-left: none;
}
.board .cell:nth-child(9),
.board .cell:nth-child(6),
.board .cell:nth-child(3) {
  border-right: none;
}

/* If the mark is X*/
.board .cell.x::before,
.board .cell.x::after {
  content: "";
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
  background-color: #32c18c;
}

.board .cell.x::before {
  transform: rotate(45deg);
}
.board .cell.x::after {
  transform: rotate(-45deg);
}

/*if the mark is circle*/

.board .cell.circle::before,
.board .cell.circle::after {
  content: "";
  position: absolute;
  width: var(--mark-size);
  height: var(--mark-size);
  background-color: #3b71c5;
  border-radius: 50%;
}
.board .cell.circle::after {
  content: "";
  position: absolute;
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: #12171b;
  border-radius: 50%;
}

.board .cell.circle,
.board .cell.x {
  cursor: not-allowed;
}

/*on hover while x's turn*/

.board.x :not(.cell.x):not(.cell.circle):hover::before,
.board.x :not(.cell.x):not(.cell.circle):hover::after {
  content: "";
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
  background-color: lightgrey;
}
.board.x .cell:hover::after {
  transform: rotate(-45deg);
}
.board.x .cell:hover::before {
  transform: rotate(45deg);
}

/*on hover while circle's turn*/

.board.circle :not(.cell.x):not(.cell.circle):hover::before,
.board.circle :not(.cell.x):not(.cell.circle):hover::after {
  content: "";
  position: absolute;
  width: var(--mark-size);
  height: var(--mark-size);
  background-color: lightgrey;
  border-radius: 50%;
}
.board.circle :not(.cell.x):not(.cell.circle):hover::after {
  content: "";
  position: absolute;
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: #12171b;
  border-radius: 50%;
}

/*pop up*/
.winning-message {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 90%);
  display: none;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  color: white;
  font-size: 60px;
}
.winning-message .restartButton {
  padding: 15px;
  border-radius: 6px;
  background-color: white;
  color: red;
  font-size: 20px;
  font-weight: bold;
  margin-top: 10px;
  transition: 0.5s;
  cursor: pointer;
  border: solid 1px white;
}

.winning-message .restartButton:hover {
  background-color: red;
  color: white;
  border-color: black;
}
.winning-message.show {
  display: flex;
}
